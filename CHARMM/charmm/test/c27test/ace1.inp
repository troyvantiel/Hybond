* CHARMM Testcase ace1.inp
* Author: Christian Bartels & Michael Schaefer
* Files:  toph19.rtf, param19.prm, acepar19.inp
* Tests:  ACE energy and gradient, ACE with CONS FIX and with BLOCK
*

if ?ace .ne. 1 then
 echo "Test NOT performed."
 stop
endif

if ?block .ne. 1 then
 echo "Test NOT performed."
 stop
endif

if ?replica .ne. 1 then
 echo "Test NOT performed."
 stop
endif

set pnode 
if ?parallel .eq. 1 then set pnode = node 0

stream datadir.def

open unit 11 read form name @0toph19.rtf
read rtf card unit 11
close unit 11

open read unit 11 card name @0param19.prm
! read param print unit 11 card ! verbose
read param unit 11 card
close unit 11

! read ACE parameters from file:
open read unit 11 card name @0acepar19.inp
read ACEParameters card unit 11
close unit 11

read sequence card
* fragment of hairpin BH8 peptide
*
6
THR VAL ASN GLY LYS THR

generate bh8 setup

ic param
ic seed 1 N 1 CA 1 C
ic build

! calculate energy with "conventional" r-dielectric electrostatics:
energy atom rdie switch vdis vswi cutnb 13.0 ctonnb 8.0 ctofnb 12.0

! minimize a few steps to eliminate bad contacts:
mini sd  nstep 5  nprint  10

energy
set E_rdie ?ener

!--------------------------------------------------------------
! test ACE energy and gradient:
!--------------------------------------------------------------

prnlev 5 @pnode

! define energy parameters (activate ace)
energy atom ace ieps 1.0 seps 80.0 alpha 1.3 sigma 3.0 switch -
       vdis vswi cutnb 13.0 ctonnb 8.0 ctofnb 12.0
set E_ace ?ener

! test analytic gradient:
test first step 0.00001 tol 0.000001

! de-activate ace, use r-dielectric electrostatics:
energy atom rdie switch vdis vswi cutnb 13.0 ctonnb 8.0 ctofnb 12.0
set E_new ?ener

! calculate diff with original energy using RDIE (should be zero):
decr E_new by @{E_rdie}

! re-activate ace:
energy atom ace ieps 1.0 seps 80.0 alpha 1.3 sigma 3.0 switch -
       vdis vswi cutnb 13.0 ctonnb 8.0 ctofnb 12.0
set E_new ?ener

! calculate diff with previous ACE energy (should be zero):
decr E_new by @{E_ace}

! minimize a few steps with ACE:
mini sd  nstep 5  nprint  1

!--------------------------------------------------------------
! test ACE energy with use of CONS FIX (fixing atoms):
!--------------------------------------------------------------

! WARNING: the implementation of CONS FIX with ACE is an APPROXI-
! MATION where energy terms involving two fixed atoms and a third
! atom which is not fixed are NEGLECTED; see the interaction-
! dielectric forces in
!     Schaefer & Kaplus, J Phys Chem (1996), 1578.

prnlev 5 @pnode

! calculate energy with ACE:
energy

set E_ref ?ener
set Ehydr_ref ?hydr
!set Eself_ref ?self  ! would be desirable to be able to query
!set Escre_ref ?scre  ! would be desirable to be able to query
!set Ecoul_ref ?coul  ! would be desirable to be able to query

! fix all atoms: SCREENing, COULomb, INTERaction should be zero
! because non-bonded atom pair list is empty;
! HYDRophobic, SELF should be unchanged:
cons fix sele all end
energy
set E_new ?ener
set Ehydr_new ?hydr
!set Eself_new ?self  ! cannot query energy property

! total energy should be different from reference:
decr E_new by @{E_ref}

! difference should give zero for Eself and Ehydr:
decr Ehydr_new by @{Ehydr_ref}
!decr Eself_new by @{Eself_ref}

! fix residues 3 and 4, only HYDRophobic, SELF should be unchanged:
cons fix sele resid 3:4 end
energy
set Ehydr_new ?hydr
decr Ehydr_new by @{Ehydr_ref}
!set Eself_new ?self             ! cannot query energy property
!decr Eself_new by @{Eself_ref}

! test gradients with atoms fixed -- this should NOT lead to errors
! in analytic derivatives, because the same energy terms
! are neglected in the energy and gradient calculations:
test first step 0.00001 tol 0.000001

! go back to not fixing atoms, should reproduce original ACE energy:
cons fix sele none end
energy
set E_new ?ener
decr E_new by @{E_ref}

!--------------------------------------------------------------
! test ACE energy with use of BLOCK/Replica (multiple copies):
! ** thanks to Collin Stultz for help **
!--------------------------------------------------------------

prnlev 5 @pnode

! set ACE (already activated) reference energy:
set E_ref ?ener

! define residue to be replicated: ASN 3
define residue select segid bh8 .and. resid 3 end

! replicate residue:
replicate A nrep 2 select residue end

! delete original residue:
delete atom select residue end

! setup BLOCK interaction matrix:
block 2
call 2 select segid A* end
coef 1 1 1.0
coef 1 2 0.5
coef 2 2 0.5
end

! calculate energy with ACE, should be the same as w/o replicas:
energy
set E_new ?ener
decr E_new by @{E_ref}

! forces should work with replicas:
test first step 0.00001 tol 0.000001


STOP
